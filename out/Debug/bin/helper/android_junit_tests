#!/usr/bin/env python
#
# This file was generated by build/android/gyp/create_java_binary_script.py

import argparse
import os
import sys

self_dir = os.path.dirname(__file__)
classpath = ["../../lib.java/android_junit_tests.jar", "../../lib.java/android_junit_tests.jar", "../../lib.java/third_party/bazel/desugar/Desugar-runtime.jar", "../../lib.java/build/android/buildhooks/build_hooks_java.jar", "../../lib.java/third_party/hamcrest/hamcrest-core.jar", "../../lib.java/third_party/hamcrest/hamcrest-integration.jar", "../../lib.java/third_party/hamcrest/hamcrest-library.jar", "../../lib.java/third_party/junit/junit.jar", "../../lib.java/third_party/byte_buddy/byte-buddy.jar", "../../lib.java/third_party/objenesis/objenesis.jar", "../../lib.java/third_party/mockito/mockito_java.jar", "../../lib.java/third_party/robolectric/android-all-8.1.0-robolectric-r4402310.jar", "../../lib.java/third_party/jsr-305/jsr_305_javalib.jar", "../../lib.java/third_party/robolectric/robolectric_shadowapi_java.jar", "../../lib.java/third_party/intellij/annotations.jar", "../../lib.java/third_party/robolectric/robolectric_annotations_java.jar", "../../lib.java/third_party/robolectric/robolectric_utils_java.jar", "../../lib.java/third_party/guava/guava.jar", "../../lib.java/third_party/ow2_asm/asm.jar", "../../lib.java/third_party/ow2_asm/asm-tree.jar", "../../lib.java/third_party/ow2_asm/asm-commons.jar", "../../lib.java/third_party/robolectric/robolectric_sandbox_java.jar", "../../lib.java/third_party/robolectric/robolectric_junit_java.jar", "../../lib.java/third_party/robolectric/robolectric_resources_java.jar", "../../lib.java/third_party/accessibility_test_framework/accessibility-test-framework.jar", "../../lib.java/third_party/gson/gson.jar", "../../lib.java/third_party/icu4j/icu4j.jar", "../../lib.java/third_party/sqlite4java/sqlite4java.jar", "../../lib.java/third_party/robolectric/shadows-core-3.2.jar", "../../lib.java/third_party/bouncycastle/bcprov-jdk16.jar", "../../lib.java/third_party/xstream/xstream.jar", "../../lib.java/third_party/robolectric/robolectric_java.jar", "../../lib.java/build/android/tools.jar", "../../lib.java/build/android/buildhooks/build_hooks_android_java.jar", "../../lib.java/third_party/android_tools/support/android_support_multidex_java.jar", "../../lib.java/third_party/robolectric/shadows_multidex_java.jar", "../../lib.java/third_party/android_tools/support/support-annotations-27.0.0.jar", "../../lib.java/third_party/android_tools/support/arch_core_common.jar", "../../lib.java/third_party/android_tools/support/arch_lifecycle_common.jar", "../../lib.java/third_party/android_tools/support/android_arch_lifecycle_runtime_java.jar", "../../lib.java/third_party/android_tools/support/android_support_compat_java.jar", "../../lib.java/third_party/android_tools/support/android_support_core_ui_java.jar", "../../lib.java/third_party/android_tools/support/android_support_core_utils_java.jar", "../../lib.java/third_party/android_tools/support/android_support_media_compat_java.jar", "../../lib.java/third_party/android_tools/support/android_support_fragment_java.jar", "../../lib.java/third_party/android_tools/google_play_services_basement_java.jar", "../../lib.java/third_party/android_tools/google_play_services_tasks_java.jar", "../../lib.java/third_party/android_tools/google_play_services_base_java.jar", "../../lib.java/third_party/android_tools/google_play_services_auth_base_java.jar", "../../lib.java/third_party/robolectric/shadows_play_services_java.jar", "../../lib.java/testing/android/junit/junit_test_support.jar", "../../lib.java/build/android/buildhooks/build_hooks_android_impl_java.jar", "../../lib.java/rtc_base/base_java.jar", "../../lib.java/modules/audio_device/audio_device_java.jar", "../../lib.java/sdk/android/base_java.jar", "../../lib.java/sdk/android/audio_api_java.jar", "../../lib.java/sdk/android/video_api_java.jar", "../../lib.java/sdk/android/video_java.jar", "../../lib.java/sdk/android/camera_java.jar", "../../lib.java/sdk/android/filevideo_java.jar", "../../lib.java/sdk/android/swcodecs_java.jar", "../../lib.java/sdk/android/hwcodecs_java.jar", "../../lib.java/sdk/android/java_audio_device_module_java.jar", "../../lib.java/sdk/android/peerconnection_java.jar", "../../lib.java/sdk/android/screencapturer_java.jar", "../../lib.java/sdk/android/surfaceviewrenderer_java.jar", "../../lib.java/sdk/android/libjingle_peerconnection_java.jar", "../../lib.java/sdk/android/libjingle_peerconnection_metrics_default_java.jar", "../../lib.java/examples/androidapp/third_party/autobanh/autobanh.jar", "../../lib.java/examples/AppRTCMobile_javalib.jar", "../../lib.java/base/base_java.jar", "../../lib.java/testing/android/reporter/reporter_java.jar", "../../lib.java/third_party/android_support_test_runner/exposed-instrumentation-api-publish-no-dep.jar", "../../lib.java/third_party/android_support_test_runner/rules_java.jar", "../../lib.java/third_party/guava/guava-android.jar", "../../lib.java/third_party/android_support_test_runner/runner-release-no-dep.jar", "../../lib.java/third_party/android_tools/support/android_support_chromium_java.jar", "../../lib.java/third_party/ub-uiautomator/ub-uiautomator.jar", "../../lib.java/base/base_java_test_support.jar"]
bootclasspath = []
extra_program_args = []
if os.getcwd() != self_dir:
  offset = os.path.relpath(self_dir, os.getcwd())
  classpath = [os.path.join(offset, p) for p in classpath]
  bootclasspath = [os.path.join(offset, p) for p in bootclasspath]
java_cmd = ["java"]
# This is a simple argparser for jvm and jar arguments.
parser = argparse.ArgumentParser()
parser.add_argument('--jar-args')
parser.add_argument('--jvm-args')

known_args, unknown_args = parser.parse_known_args(sys.argv[1:])
if known_args.jvm_args:
  jvm_arguments = known_args.jvm_args.strip('"').split()
  java_cmd.extend(jvm_arguments)
if known_args.jar_args:
  jar_arguments = known_args.jar_args.strip('"').split()
  if unknown_args:
    raise Exception('There are unknown arguments')
else:
  jar_arguments = unknown_args


if bootclasspath:
    java_cmd.append("-Xbootclasspath/p:" + ":".join(bootclasspath))
java_cmd.extend(
    ["-classpath", ":".join(classpath), "-enableassertions", "org.chromium.testing.local.JunitTestMain"])
java_cmd.extend(extra_program_args)
java_cmd.extend(jar_arguments)
os.execvp("java", java_cmd)
