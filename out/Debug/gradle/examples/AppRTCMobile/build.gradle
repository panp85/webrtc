// Generated by //build/android/generate_gradle.py

apply plugin: "com.android.application"

android {
    compileSdkVersion "android-27"
    buildToolsVersion "27.0.3"

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        minSdkVersion 16
        targetSdkVersion 27
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    sourceSets {
        main {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        test {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        androidTest {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        debug {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        release {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }

        main {
            manifest.srcFile "../../../../../examples/androidapp/AndroidManifest.xml"
            java.srcDirs = [
                "extracted-srcjars",
            ]
            java.filter.exclude(
            )
            jniLibs.srcDirs = [
                "symlinked-libs",
            ]
            res.srcDirs = [
                "extracted-res",
            ]
        }


    }
}


dependencies {
    implementation project(":third_party.jsr-305.jsr_305_javalib")
    implementation project(path: ":examples.AppRTCMobile_javalib")
    implementation project(path: ":rtc_base.base_java")
    implementation project(path: ":base.base_java")



}
afterEvaluate {
    def tasksToDisable = tasks.findAll {
        return (it.name.equals('generateDebugSources')  // causes unwanted AndroidManifest.java
                || it.name.equals('generateReleaseSources')
                || it.name.endsWith('BuildConfig')  // causes unwanted BuildConfig.java
                || it.name.equals('preDebugAndroidTestBuild')
                || it.name.endsWith('Aidl')
                || it.name.endsWith('Renderscript')
                || it.name.endsWith('Shaders'))
    }
    tasksToDisable.each { Task task ->
      task.enabled = false
    }
}