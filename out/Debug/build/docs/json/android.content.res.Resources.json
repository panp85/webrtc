{
  "methods": {
    "getDisplayMetrics()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.util.DisplayMetrics",
      "exceptions": [],
      "name": "getDisplayMetrics()"
    },
    "getQuantityString(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "resId",
        "quantity"
      ],
      "returnType": "java.lang.String",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "getQuantityString(int,int)"
    },
    "getQuantityString(int,int,java.lang.Object...)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "id",
        "quantity",
        "formatArgs"
      ],
      "returnType": "java.lang.String",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "getQuantityString(int,int,java.lang.Object...)"
    },
    "getSystem()": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "android.content.res.Resources",
      "exceptions": [],
      "name": "getSystem()"
    },
    "loadDrawable(android.util.TypedValue,int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "value",
        "id"
      ],
      "returnType": "android.graphics.drawable.Drawable",
      "exceptions": [],
      "name": "loadDrawable(android.util.TypedValue,int)"
    },
    "loadDrawable(android.util.TypedValue,int,android.content.res.Resources.Theme)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "value",
        "id",
        "theme"
      ],
      "returnType": "android.graphics.drawable.Drawable",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "loadDrawable(android.util.TypedValue,int,android.content.res.Resources.Theme)"
    },
    "loadXmlResourceParser(int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "resId",
        "type"
      ],
      "returnType": "android.content.res.XmlResourceParser",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "loadXmlResourceParser(int,java.lang.String)"
    },
    "loadXmlResourceParser(java.lang.String,int,int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "file",
        "id",
        "assetCookie",
        "type"
      ],
      "returnType": "android.content.res.XmlResourceParser",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "loadXmlResourceParser(java.lang.String,int,int,java.lang.String)"
    },
    "newNotFoundException(int)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "id"
      ],
      "returnType": "android.content.res.Resources.NotFoundException",
      "exceptions": [],
      "name": "newNotFoundException(int)"
    },
    "obtainAttributes(android.util.AttributeSet,int[])": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "set",
        "attrs"
      ],
      "returnType": "android.content.res.TypedArray",
      "exceptions": [],
      "name": "obtainAttributes(android.util.AttributeSet,int[])"
    },
    "obtainResettableArrays()": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.util.LongSparseArray\u003c?\u003e\u003e",
      "exceptions": [],
      "name": "obtainResettableArrays()"
    },
    "obtainTypedArray(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "id"
      ],
      "returnType": "android.content.res.TypedArray",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "obtainTypedArray(int)"
    },
    "openRawResource(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "id"
      ],
      "returnType": "java.io.InputStream",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "openRawResource(int)"
    },
    "openRawResourceFd(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "id"
      ],
      "returnType": "android.content.res.AssetFileDescriptor",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "openRawResourceFd(int)",
      "documentation": "Since {@link AssetFileDescriptor}s are not yet supported by Robolectric, {@code null} will\nbe returned if the resource is found. If the resource cannot be found, {@link Resources.NotFoundException} will\nbe thrown.\n"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "setCreatedFromResId(android.content.res.Resources,int,android.graphics.drawable.Drawable)": {
      "isImplementation": false,
      "modifiers": [
        "static"
      ],
      "params": [
        "resources",
        "id",
        "drawable"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCreatedFromResId(android.content.res.Resources,int,android.graphics.drawable.Drawable)"
    },
    "setDensity(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "density"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDensity(float)"
    },
    "setDisplay(android.view.Display)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "display"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDisplay(android.view.Display)"
    },
    "setScaledDensity(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "scaledDensity"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setScaledDensity(float)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "org.robolectric.Shadows.shadowOf",
    "org.robolectric.shadow.api.Shadow.directlyOn",
    "android.content.res.AssetFileDescriptor",
    "android.content.res.AssetManager",
    "android.content.res.Configuration",
    "android.content.res.Resources",
    "android.content.res.ResourcesImpl",
    "android.content.res.TypedArray",
    "android.content.res.XmlResourceParser",
    "android.graphics.Bitmap",
    "android.graphics.drawable.BitmapDrawable",
    "android.graphics.drawable.Drawable",
    "android.os.ParcelFileDescriptor",
    "android.util.AttributeSet",
    "android.util.DisplayMetrics",
    "android.util.LongSparseArray",
    "android.util.TypedValue",
    "android.view.Display",
    "java.io.FileInputStream",
    "java.io.IOException",
    "java.io.InputStream",
    "java.lang.reflect.Field",
    "java.lang.reflect.Modifier",
    "java.util.ArrayList",
    "java.util.List",
    "java.util.Locale",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.res.Plural",
    "org.robolectric.res.PluralRules",
    "org.robolectric.res.ResName",
    "org.robolectric.res.ResType",
    "org.robolectric.res.ResourceTable",
    "org.robolectric.res.TypedResource",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.util.ReflectionHelpers.ClassParameter",
    "org.robolectric.shadows.ShadowResources.ShadowTheme",
    "org.robolectric.shadows.ShadowResources.ShadowNotFoundException"
  ],
  "name": "org.robolectric.shadows.ShadowResources"
}