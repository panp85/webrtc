// Generated by //build/android/generate_gradle.py

apply plugin: "com.android.library"

android {
    compileSdkVersion "android-27"
    buildToolsVersion "27.0.3"

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        minSdkVersion 16
        targetSdkVersion 27
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    sourceSets {
        main {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        test {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        androidTest {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        debug {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }
        release {
            aidl.srcDirs = []
            assets.srcDirs = []
            java.srcDirs = []
            jni.srcDirs = []
            renderscript.srcDirs = []
            res.srcDirs = []
            resources.srcDirs = []
        }

        main {
            manifest.srcFile "../../../../../../build/android/gradle/AndroidManifest.xml"
            java.srcDirs = [
                "extracted-srcjars",
                "../../../../../../sdk/android/api",
                "../../../../../../sdk/android/src/java",
            ]
            java.filter.exclude(
                "org/webrtc/HardwareVideoDecoder.java",
                "org/webrtc/audio/*.java",
                "org/webrtc/CalledByNative.java",
                "org/webrtc/Camera1Session.java",
                "org/webrtc/JniCommon.java",
                "org/webrtc/WrappedNativeVideoEncoder.java",
                "org/webrtc/EglBase14.java",
                "org/webrtc/VideoCodecType.java",
                "org/webrtc/FramerateBitrateAdjuster.java",
                "org/webrtc/Histogram.java",
                "org/webrtc/DynamicBitrateAdjuster.java",
                "org/webrtc/EglBase10.java",
                "org/webrtc/WrappedNativeI420Buffer.java",
                "org/webrtc/HardwareVideoEncoder.java",
                "org/webrtc/BitrateAdjuster.java",
                "org/webrtc/NV21Buffer.java",
                "org/webrtc/CameraCapturer.java",
                "org/webrtc/Camera2Session.java",
                "org/webrtc/JniHelper.java",
                "org/webrtc/WebRtcClassLoader.java",
                "org/webrtc/BaseBitrateAdjuster.java",
                "org/webrtc/VideoEncoderWrapper.java",
                "org/webrtc/VideoDecoderWrapper.java",
                "org/webrtc/NativeLibrary.java",
                "org/webrtc/WrappedNativeVideoDecoder.java",
                "org/webrtc/NativeCapturerObserver.java",
                "org/webrtc/NV12Buffer.java",
                "org/webrtc/CalledByNativeUnchecked.java",
                "org/webrtc/CameraSession.java",
                "org/webrtc/MediaCodecUtils.java",
                "org/webrtc/RefCountDelegate.java",
                "org/webrtc/Empty.java",
                "org/webrtc/RendererCommon.java",
                "org/webrtc/GlTextureFrameBuffer.java",
                "org/webrtc/EncodedImage.java",
                "org/webrtc/GlRectDrawer.java",
                "org/webrtc/VideoCodecStatus.java",
                "org/webrtc/MediaSource.java",
                "org/webrtc/VideoDecoder.java",
                "org/webrtc/VideoSink.java",
                "org/webrtc/VideoFrame.java",
                "org/webrtc/HardwareVideoEncoderFactory.java",
                "org/webrtc/RTCStatsReport.java",
                "org/webrtc/RtpReceiver.java",
                "org/webrtc/VideoEncoder.java",
                "org/webrtc/SurfaceEglRenderer.java",
                "org/webrtc/CameraEnumerationAndroid.java",
                "org/webrtc/StatsReport.java",
                "org/webrtc/AudioSource.java",
                "org/webrtc/PeerConnection.java",
                "org/webrtc/VideoCapturer.java",
                "org/webrtc/RefCounted.java",
                "org/webrtc/NetworkMonitorAutoDetect.java",
                "org/webrtc/EglRenderer.java",
                "org/webrtc/FecControllerFactoryFactoryInterface.java",
                "org/webrtc/PeerConnectionFactory.java",
                "org/webrtc/ScreenCapturerAndroid.java",
                "org/webrtc/Camera2Capturer.java",
                "org/webrtc/HardwareVideoDecoderFactory.java",
                "org/webrtc/AudioProcessingFactory.java",
                "org/webrtc/SurfaceTextureHelper.java",
                "org/webrtc/RtpParameters.java",
                "org/webrtc/NetworkMonitor.java",
                "org/webrtc/YuvConverter.java",
                "org/webrtc/TurnCustomizer.java",
                "org/webrtc/DtmfSender.java",
                "org/webrtc/CameraVideoCapturer.java",
                "org/webrtc/GlUtil.java",
                "org/webrtc/AudioTrack.java",
                "org/webrtc/CallSessionFileRotatingLogSink.java",
                "org/webrtc/MediaStreamTrack.java",
                "org/webrtc/VideoEncoderFactory.java",
                "org/webrtc/GlShader.java",
                "org/webrtc/VideoFrameDrawer.java",
                "org/webrtc/VideoRenderer.java",
                "org/webrtc/FileVideoCapturer.java",
                "org/webrtc/CameraEnumerator.java",
                "org/webrtc/VideoSource.java",
                "org/webrtc/RTCStats.java",
                "org/webrtc/Camera1Capturer.java",
                "org/webrtc/SurfaceViewRenderer.java",
                "org/webrtc/RTCStatsCollectorCallback.java",
                "org/webrtc/RtpTransceiver.java",
                "org/webrtc/audio/*.java",
                "org/webrtc/MediaCodecVideoEncoder.java",
                "org/webrtc/DefaultVideoDecoderFactory.java",
                "org/webrtc/NativeLibraryLoader.java",
                "org/webrtc/MediaStream.java",
                "org/webrtc/RtpSender.java",
                "org/webrtc/MediaConstraints.java",
                "org/webrtc/VideoDecoderFactory.java",
                "org/webrtc/VideoEncoderFallback.java",
                "org/webrtc/NativePeerConnectionFactory.java",
                "org/webrtc/VideoDecoderFallback.java",
                "org/webrtc/Camera2Enumerator.java",
                "org/webrtc/TextureBufferImpl.java",
                "org/webrtc/StatsObserver.java",
                "org/webrtc/DefaultVideoEncoderFactory.java",
                "org/webrtc/JavaI420Buffer.java",
                "org/webrtc/VideoFileRenderer.java",
                "org/webrtc/YuvHelper.java",
                "org/webrtc/MediaCodecVideoDecoder.java",
                "org/webrtc/SessionDescription.java",
                "org/webrtc/Camera1Enumerator.java",
                "org/webrtc/SdpObserver.java",
                "org/webrtc/Metrics.java",
                "org/webrtc/DataChannel.java",
                "org/webrtc/EglBase.java",
                "org/webrtc/VideoTrack.java",
                "org/webrtc/VideoCodecInfo.java",
                "org/webrtc/IceCandidate.java",
            )
            jniLibs.srcDirs = [
            ]
            res.srcDirs = [
                "extracted-res",
            ]
        }


    }
}


dependencies {
    implementation project(":third_party.jsr-305.jsr_305_javalib")
    implementation project(path: ":sdk.android.base_java")
    implementation project(path: ":sdk.android.video_api_java")
    implementation project(path: ":sdk.android.video_java")
    implementation project(path: ":rtc_base.base_java")



}
afterEvaluate {
    def tasksToDisable = tasks.findAll {
        return (it.name.equals('generateDebugSources')  // causes unwanted AndroidManifest.java
                || it.name.equals('generateReleaseSources')
                || it.name.endsWith('BuildConfig')  // causes unwanted BuildConfig.java
                || it.name.equals('preDebugAndroidTestBuild')
                || it.name.endsWith('Aidl')
                || it.name.endsWith('Renderscript')
                || it.name.endsWith('Shaders'))
    }
    tasksToDisable.each { Task task ->
      task.enabled = false
    }
}